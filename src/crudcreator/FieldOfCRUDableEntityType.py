from pydantic import BaseModel, ConfigDict
from typing import Optional, Any, Type
from .Filter import FilterType
from .Sort import SortType
from .Sentinel import Sentinel

class FieldOfCRUDableEntityType(BaseModel):
    """
    An instance of this class represents a field of a CRUDable entity type.
    """

    name: str
    """
    Field name.
    """

    type: Optional[Any] = Sentinel.unknown
    """
    Field type.
    If not provided, it will be filled in automatically when the program is launched, during source analysis.
    """

    list_allowed_filter_type: Optional[list[FilterType]] = None
    """
    How can entities be filtered when a filter is specified on this field?
    """

    list_allowed_sort_type: Optional[list[SortType]] = None
    """
    How can entities be sorted when a sort is specified on this field?
    """

    can_be_created: Optional[bool] = False
    """
    Can a value for this field be specified when the entity is created?
    TODO : careful, update_or_create for fields with can_be_create!=can_be_updated
    """

    can_be_read: Optional[bool] = True
    """
    Can this field be read?
    """

    can_be_updated: Optional[bool] = False
    """
    Can a value for this field be specified when modifying the entity?
    TODO : careful, update_or_create for fields with can_be_create!=can_be_updated
    """

    default: Optional[Any] = Sentinel.unknown#TODO mÃªme type que field_type
    """ 
    The default value of the field.
    If the default value is not provided, it will be filled in automatically when the program 
    is launched, during source analysis.
    """

    is_id_field: Optional[bool] = Sentinel.unknown
    """
    Indicates whether the field is part of the entity's unique identifier.
    If this information is not provided, it will be filled in automatically when the program is launched
    during source analysis.
    """

    nullable: Optional[bool] = Sentinel.unknown
    """
    Indicates whether the field can be null.
    If this information is not provided, it will be filled in automatically when the program is launched
    during source analysis.
    """

    is_automatically_generated: Optional[bool] = Sentinel.unknown
    """
    Is this field automatically generated by the source when the entity is created?
    If this information is not provided, it will be filled in automatically when the program is launched
    during source analysis.
    TODO : to review. More interesting to have "uniquely_generated"?
    """

    link: Optional["Link"] = None
    """
    If the field represents a link with another field of another entity (equivalent to a foreign key in SQL).
    """

    def get_interface_read_type(self) -> Type:
        """
        Returns the Pydantic type of the field when it is read.
        """
        return Optional[self.type] if self.nullable else self.type
    
    def get_interface_read_default(self) -> Any:
        """
        Returns the default value of the field when it is read.
        """
        return None if self.nullable else ...
    
    model_config = ConfigDict(arbitrary_types_allowed=True)


from .Link import Link
from .AbstractCRUDableEntityType import AbstractCRUDableEntityType
from .FieldOfCRUDableEntityType import FieldOfCRUDableEntityType
from .Fields import Fields
from .interface.CRUDableEntityTypeInterface import CRUDableEntityTypeInterface
FieldOfCRUDableEntityType.model_rebuild()